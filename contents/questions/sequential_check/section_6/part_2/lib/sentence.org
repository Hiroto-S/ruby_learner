-課題-
与えられたハッシュ(address)の:nameの要素を"suzuki"に変更し，新たに:male_female(キー)を作成し:male(要素)を格納せよ．
その後，変更前のハッシュをpを用いて出力せよ．
また，変更後のハッシュのキーと要素を全てputsを用いて，「キー: 要素」の形で出力せよ．

* 配列
  - 配列とは，いくつかのオブジェクトを順序つきで格納したオブジェクトです．格納されたオブジェクトは要素と呼びます．
** 使用方法
    - 配列作成...配列名 = [オブジェクト，オブジェクト，オブジェクト]．オブジェクトは複数格納できるが何も格納しなくても良い．
    - 要素呼び出し...配列名[index] (このindexとは配列の要素番号である．)
    - 要素追加...配列 << 新しい要素
    - 要素番号...配列の要素は0から数える．
    - 要素変更...配列名[index] = オブジェクト
    - 配列の大きさ(要素数)...配列名.size

* ハッシュ
  - ハッシュとは，いくつかのオブジェクトを文字列やシンボルをキーとして格納したオブジェクトです．格納されたオブジェクトは要素と呼びます．
** 使用方法
    - ハッシュ作成...ハッシュ名 = { キー => オブジェクト，キー => オブジェクト, ...}
      もしくは, ハッシュ名 = { キー: オブジェクト, キー: オブジェクト, ...}（こちらは先ほどのハッシュ作成方法のキーがシンボルの場合に簡潔にかける方法である．）
      ex) person = { name: "tanaka", age: 24}
       　 (キーには数値や文字列やシンボル等が使用可能だが，基本的にシンボルを用いる．)
    - 要素呼び出し...ハッシュ名[キー]
    - 要素追加...ハッシュ名[新しいキー] = 新しいオブジェクト
    - 要素変更...ハッシュ名[キー] = 変更後のオブジェクト
    - ハッシュの大きさ(要素数)...ハッシュ名.size

** ハッシュでのeach
  - ハッシュ.each do |key, value|
      ハッシュのキーと要素を取得可能
    end

* シンボル
   - 文字列に似たオブジェクトで，Rubyがメソッドなどの名前を識別するためのラベルをオブジェクトにしたものです．
   - 使用方法...:文字列
     ex) :hoge (シンボル「:hoge」)
         :"hoge" (上記と同じ意味)
   - シンボルと同様のことは文字列でもできます．
   - シンボルは見た目は文字だが，実際は数字であるので，比較を行いやすい．
