-課題-
コマンドラインから5つの引数を受け取り，受け取った順に改行させて，標準出力に表示するプログラムを作成せよ．

* 配列
  - 配列とは，いくつかのオブジェクトを順序つきで格納したオブジェクトです．格納されたオブジェクトは要素と呼びます．
  - 使用方法
    - 配列作成...配列名 = [オブジェクト，オブジェクト，オブジェクト]．オブジェクトは複数格納できるが何も格納しなくても良い．
    - 要素呼び出し...配列名[index] このindexとは配列の要素番号である．
    - 要素変更...配列名[index] = オブジェクト
    - 配列の大きさ(要素数)...配列名.size

* 標準入力
  - 標準入力とはキーボード入力のことです．
  - 標準入力を行えるメソッドの紹介．
** STDIN
   - 標準入力のレシーバー
** レシーバー
   - ドット(.)の左側
** gets
   - get string の略
   - 使用方法...変数 = STDIN.gets
   - 機能...標準入力にキーボード入力された1行の文字列を取得する.
** readlines
   - 使用方法...変数 = STDIN.readlines
   - 機能...キーボードから複数行の文字列を，1行ごとの配列として取得する．入力を終了する場合はCtrl+Dを行う．
** ARGV
   - 使用方法...変数 = ARGV[index]，このindexとは配列の要素番号である．
     ex) 「ruby argv.rb a b c d 」でファイルを実行すると，ARGVという配列は「[a, b, c, d]」となる．
   - 機能...コマンドラインから引数として与えられた文字列を格納する配列オブジェクト．

* chomp
  - 使用方法...「 文字列.chomp! 」 もしくは　「 変数 = 文字列.chomp 」
  - 機能...文字列の末尾の改行文字を取り除いた新しい文字列を返す.
  - この場合，感嘆符(!)の有無はレシーバーの文字列を破壊的に操作するかを決めている．
    ex) 「test = "Ruby!\n"」とした場合に「sample = test.chomp」とすると「sampleは"Ruby!"」「testは"Ruby!\n"」となる．
      　一方で，「sample = test.chomp!」とすると「sampleとtestの両方とも"Ruby!"」となる．
