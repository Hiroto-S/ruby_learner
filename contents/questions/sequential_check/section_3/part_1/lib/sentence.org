-課題-
コマンドラインから3つの数値を変数x,y,zとして受け取り整数に変換せよ．
その後，縦x，横y，高さzの直方体の表面積と体積を求めよ.
その求めた値をputsで'表面積=(表面積の求めた値)'と'体積=(体積の求めた値)'の形で表示するプログラムを作成せよ．

* 演算子
  - 正数(+a)
  - 負数(-a)
  - 加算(a + b)
  - 減算(a - b)
  - 乗算(a * b)
  - 除算(a / b)
  - 割り算の余り(a % b)
  - aのb乗(a ** b)

* 変数
  - オブジェクト(数値, 文字列, 配列 etc...)を保存する箱．中身を書き換えることが可能．
  - 以下の変数の種類は，現時点では読まなくても良い．
** ローカル変数
   - 小文字またはアンダーバー(_)で始まる識別子．ブロック内、メソッド内などローカルなスコープで有効.
** インスタンス変数
   - アットマーク(@) で始まる識別子．インスタンスされたクラス等で，そのオブジェクトが存在する間有効．
** クラス変数
   - 2つのアットマーク(@@) で始まる識別子．同じクラスのすべてのインスタンスで共有される．

* 標準入力
  - 標準入力とはキーボード入力のことです．
  - 標準入力を行えるメソッドの紹介．
** STDIN
   - 標準入力のレシーバー
** レシーバー
   - ドット(.)の左側
** gets
   - get string の略
   - 使用方法...変数 = STDIN.gets
   - 機能...標準入力にキーボード入力された1行の文字列を取得する.
** readlines
   - 使用方法...変数 = STDIN.readlines
   - 機能...キーボードから複数行の文字列を，1行ごとの配列として取得する．入力を終了する場合はCtrl+Dを行う．
** ARGV
   - 使用方法...変数 = ARGV[index]，このindexとは配列の要素番号である．
     ex) 「ruby argv.rb a b c d 」でファイルを実行すると，ARGVという配列は「[a, b, c, d]」となる．
   - 機能...コマンドラインから引数として与えられた文字列を格納する配列オブジェクト．

* 標準出力
  - 引数として与えられた文字列を標準出力に出力するメソッドの紹介．
** print
   - 使用方法...print 引数
   - 機能...引数のオブジェクトを文字列に変換して標準出力に出力する．
** puts
   - 使用方法...puts 引数
   - 機能...引数のオブジェクトを文字列に変換し、改行を加えて標準出力に出力する．
** p
   - 使用方法...p 引数
   - 機能...引数のオブジェクトを分かりやすい文字列にして標準出力に出力する．
     ex) 引数のオブジェクトが文字列であれば””で囲まれていて、数値はそのま出力す．る末尾にはそれぞれ改行が付け足される
** printf
   - 使用方法...printf(引数)
   - 機能...C言語のprintfと同様に，書式付き文字列を使用して引数のオブジェクトを文字列に変換して標準出力に出力します．
     ex) printf('%sは%d歳から！', 'お酒', 20)の場合，出力結果は「お酒は20歳から！」 
* 文字列
** 文字列について
  - 文字列を作る最も一般的な方法は，シングルクオート(')，ダブルクオート(")で文字を囲む方法です．

** 特殊文字
  - 一部の文字には特別な機能を持つものがあるので，以下にその例をいくつか示します．
  - 改行文字(\n)...文字列を改行させる．
  - タブ文字(\t)...文字列をインデントする．PCのTABキーと同じような役割．
  - 垂直タブ文字(\v)...文字列内で，垂直に一段ずらすように空白を入れる．
  - 式展開(#{})...変数の持つ値を展開する．

** シングルクオート(')とダブルクオート(")の違い
  - シングルクオートで囲まれた文字列では，特殊文字は使用できず，全て普通の文字として認識されます．
  - ダブルクオートで囲まれた文字列では，特殊文字を使用できます．
