-課題-
キーボードから入力された値を受け取って，その値によって出力結果を変更するプログラムを「case」を用いて作成せよ．
受け取った値が「Japan」の場合はputsを用いて「こんにちは」を出力せよ．
受け取った値が「USA」の場合はputsを用いて「Hello」を出力せよ．
それ以外の場合は「else」を出力せよ．

* 擬似変数
  - 数ある変数の内の1つ．
  - 疑似変数の値を変更することはできない．
  - 今回はtrue,false,nilを紹介する．
  - true, false...比較演算の結果や条件を表すメソッドの結果として多く用いられる．これらを変数の結果として格納することも可能．
  - nil...オブジェクトが存在していないことを表す．

* 真偽値
  - 真...falseとnilを除くオブジェクト全て．
  - 偽...falseとnil

* 条件分岐
  - 条件によってプログラムの挙動を変える際に用いるメソッド．
  - 条件には値が「true」か「false」となる式を書くのが一般的．
  - 「nil」を返すオブジェクトも条件に使用できる．

** if
  - 使用方法...if 条件 then 実行したい処理 end (if のメソッド内では「then」は省略可能．)
    ex) if a>9 then 
          puts a
        end         

  - 機能...条件が「true」の場合のみ，実行したい処理を行う．「else」と「elsif」を用いて，複雑な条件分岐を実行することができる．
    ex) 使用方法の例を解説する．「『a』が9より大きい場合のみ，puts で『a』の値を表示する．」

*** elsifとelse
  - 使用方法...if 条件１ then
                 条件１で実行したい処理 
               elsif 条件２ then
 　　　　　　　　条件２で実行したい処理
               else
	         条件１と条件２の両方に当てはまらない場合の処理
	       end

  - 機能...条件を2つ以上使う場合は，条件2つ目から「if」ではなく「elsif」をつける．指定した条件の全てで「false」の場合の処理はelse内で記述する．
** unless
   - if は条件が「true」の場合に処理を実行するメソッドであるが，unless は条件が「false」の場合に処理を実行するメソッドである．
   - 使用方法...基本的にはif メソッドの「if」を「unless」に書き換えるだけである．しかし，unless メソッドにはif メソッドの「elsif」に該当する機能は無い．
     ex) unless a>9 then
           puts 'aは9以下'
         else
           puts 'aは9より大きい'
         end

   - 機能...条件が「false」の場合のみ，実行したい処理を行う．
     ex) 使用方法の例を解説する．「『a』が『9より大きい』が『false』の場合は『aは9以下』，それ以外は『aは9より大きい』と表示する」

** case
   - 使用方法...case 比較したいオブジェクト
                when 値1 then
                  文1
                when 値2 then
                  文2
                else
                  文3
                end

   -機能...比較したいオブジェクトの値が値1の場合は文1が実行される．値2も同様である．elseはどの値にも当てはまらない場合に実行される．

* 結果が「true」や「false」となる式．(比較演算子)
   - 条件を満たさない場合は「false」，それ以外は「true」を返す．
   - ここでは関係演算子と論理演算子の2つを紹介する．
*** 関係演算子
    - 左辺と右辺のオブジェクトが持つ数値や文字列を比較し，等しいか等しく無いか，また大きいか小さいかなどを比較することができる，
    - 今回は2つのオブジェクト「a」と「b」の関係で解説していく．

    - (具体例) a == b (意味）「b」が「a」に等しい．
    - (具体例) a != b (意味）「b」が「a」に等くない．
    - (具体例) a > b (意味）「a」は「b」より大きい．
    - (具体例) a >= b (意味）「a」は「b」以上．
    - (具体例) a < b (意味）「a」は「b」より小さい．
    - (具体例) a <= b (意味）「a」は「b」以下．
    
    - 「a」と「b」を関係演算子を用いて比較した結果として，関係演算子の持つ意味を満たす場合は「true」，満たさない場合は「false」を返す．

*** 論理演算子
    - 複数の関係演算子を満たす場合の条件を書くときに，よく使われる条件の書き方．
    - 今回は2つの条件式「A」と「B」の関係で解説していく．
    - (具体例) A && B (意味）「A」と「B」が共に「true」の場合は「true」を返す．
    - (具体例) A || B (意味）「A」と「B」のどちらか一方でも「true」の場合は「true」を返す．
    - (具体例) !A (意味）「A」が「true」の場合は「false」，「false」の場合は「true」を返す．

